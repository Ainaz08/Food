# import telebot
# from telebot import types

# # –í–∞—à —Ç–æ–∫–µ–Ω
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'
# bot = telebot.TeleBot(TOKEN)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# @bot.message_handler(commands=['start'])
# def start(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     menu_button = types.KeyboardButton("–ú–µ–Ω—é")
#     location_button = types.KeyboardButton("–õ–æ–∫–∞—Ü–∏—è")
#     about_button = types.KeyboardButton("–û –Ω–∞—Å")
#     markup.add(menu_button, location_button, about_button)
#     bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FoodBot! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
# @bot.message_handler(regexp="–ú–µ–Ω—é")
# def show_menu(message):
#     markup = types.InlineKeyboardMarkup()
    
#     plov_button = types.InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å", url="https://www.google.com/imgres?q=%D1%83%D0%B7%D0%B1%D0%B5%D0%BA%D1%81%D0%BA%D0%B8%D0%B9%20%D0%BF%D0%BB%D0%BE%D0%B2&imgurl=https%3A%2F%2Fimages.unian.net%2Fphotos%2F2022_10%2Fthumb_files%2F1200_0_1666194211-5378.jpg&imgrefurl=https%3A%2F%2Fwww.unian.net%2Frecipes%2Fsecond-courses%2Fside-dishes%2Fnastoyashchiy-uzbekskiy-nazvan-glavnyy-sekret-rassypchatogo-plova-12017058.html")
#     shashlik_button = types.InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π - 450—Å", url="https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.m2-shop.ru%2Frecipes%2Fshashlickuriniebedra&psig=AOvVaw0MdJPyMDQwNlutcJeqBsdH&ust=1725086778383000&source=images&cd=vfe&opi=89978449&ved=0CBMQjRxqFwoTCIilgJaPnIgDFQAAAAAdAAAAABAE")
#     samosa_button = types.InlineKeyboardButton("–°–∞–º—Å–∞ - 65—Å", url="https://www.google.com/url?sa=i&url=https%3A%2F%2Fgrillweb.uz%2Freczepty%2Fpiczcza-i-pirogi%2Fuzbekskaya-samsa-na-grile%2F&psig=AOvVaw3hXK4Xe85K7TpWCAwP-Z70&ust=1725086858069000&source=images&cd=vfe&opi=89978449&ved=0CBMQjRxqFwoTCMjdgcCPnIgDFQAAAAAdAAAAABAE")
#     wings_button = types.InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏ 12—à—Ç - 500—Å", url="https://www.google.com/imgres?q=%D0%BA%D1%80%D1%8B%D0%BB%D1%8B%D1%88%D0%BA%D0%B8&imgurl=https%3A%2F%2Fhalal-spb.ru%2Fsites%2Fdefault%2Ffiles%2Fstyles%2Flarge%2Fpublic%2Fkrylyshki-kak-v-kfs-recept.jpg%3Fitok%3DYzgzaRNX&imgrefurl=https%3A%2F%2Fhalal-spb.ru%2Frecipe%2Fkurinye-krylyshki-kfc&docid=vFKknR4gMfg2FM&tbnid=mIzxXXRcWn1G8M&vet=12ahUKEwjIjoyWkJyIAxUeJxAIHYAbFeAQM3oFCIcBEAA..i&w=700&h=467&hcb=2&ved=2ahUKEwjIjoyWkJyIAxUeJxAIHYAbFeAQM3oFCIcBEAA")
#     shawarma_button = types.InlineKeyboardButton("–®–∞—É—Ä–º–∞ - 270—Å", url="https://www.google.com/imgres?q=%D1%88%D0%B0%D1%83%D1%80%D0%BC%D0%B0%20%D1%86%D0%B5%D0%BD%D0%B0%20%D0%BA%D0%B0%D1%84%D0%B5&imgurl=https%3A%2F%2Flookaside.fbsbx.com%2Flookaside%2Fcrawler%2Fmedia%2F%3Fmedia_id%3D100067684224848&imgrefurl=https%3A%2F%2Fwww.facebook.com%2Fdostavka.shaurma.plov.lagman%2F&docid=AzdyFIR6oGRUPM&tbnid=FKf7gHNLW4rG5M&vet=12ahUKEwjemLeLkZyIAxXSJhAIHahsAAIQM3oECCsQAA..i&w=1191&h=601&hcb=2&ved=2ahUKEwjemLeLkZyIAxXSJhAIHahsAAIQM3oECCsQAA")
#     burger_button = types.InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä - 300—Å", url="https://www.google.com/imgres?q=%20%D0%B1%D1%83%D1%80%D0%B3%D0%B5%D1%80%20%D1%86%D0%B5%D0%BD%D0%B0%20%D0%BA%D0%B0%D1%84%D0%B5&imgurl=https%3A%2F%2Fsxodim.com%2Fuploads%2Fimages%2F2022%2F11%2F11%2Foptimized%2Fbeff18152003115708dc2a06510b2f73_800xauto-q-85.jpg&imgrefurl=https%3A%2F%2Fsxodim.com%2Fbishkek%2Farticle%2Fgde-v-bishkeke-poest-vkusnye-burgery&docid=1wGBKUQ1gjORLM&tbnid=C3VfFrJz-yscOM&vet=12ahUKEwjD87u1kZyIAxVKFBAIHZFlKRsQM3oECB0QAA..i&w=800&h=533&hcb=2&ved=2ahUKEwjD87u1kZyIAxVKFBAIHZFlKRsQM3oECB0QAA")
    
#     back_button = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")

#     markup.add(plov_button, shashlik_button, samosa_button, wings_button, shawarma_button, burger_button, back_button)
#     bot.send_message(message.chat.id, "–ú–µ–Ω—é:", reply_markup=markup)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–æ–∫–∞—Ü–∏—è"
# @bot.message_handler(regexp="–õ–æ–∫–∞—Ü–∏—è")
# def show_location(message):
#     bot.send_message(message.chat.id, "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n–ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")


# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
# @bot.message_handler(regexp="–û –Ω–∞—Å")
# def about_us(message):
#     bot.send_message(message.chat.id, "–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —á—Ç–æ –µ—Å—Ç—å –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë.")

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
# @bot.callback_query_handler(func=lambda call: call.data == "back")
# def back_to_menu(call):
#     start(call.message)

# # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# bot.polling(none_stop=True)





# import telebot
# from telebot import types

# # –í–∞—à —Ç–æ–∫–µ–Ω
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'
# bot = telebot.TeleBot(TOKEN)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# @bot.message_handler(commands=['start'])
# def start(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     menu_button = types.KeyboardButton("–ú–µ–Ω—é")
#     location_button = types.KeyboardButton("–õ–æ–∫–∞—Ü–∏—è")
#     about_button = types.KeyboardButton("–û –Ω–∞—Å")
#     markup.add(menu_button, location_button, about_button)
#     bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FoodBot! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
# @bot.message_handler(regexp="–ú–µ–Ω—é")
# def show_menu(message):
#     markup = types.InlineKeyboardMarkup()
    
#     plov_button = types.InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å", url="https://images.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg")
#     shashlik_button = types.InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π - 450—Å", url="https://www.m2-shop.ru/recipes/shashlickuriniebedra")
#     samosa_button = types.InlineKeyboardButton("–°–∞–º—Å–∞ - 65—Å", url="https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile")
#     wings_button = types.InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏ 12—à—Ç - 500—Å", url="https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg")
#     shawarma_button = types.InlineKeyboardButton("–®–∞—É—Ä–º–∞ - 270—Å", url="https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848")
#     burger_button = types.InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä - 300—Å", url="https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg")
    
#     back_button = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")

#     markup.add(plov_button, shashlik_button, samosa_button, wings_button, shawarma_button, burger_button, back_button)
#     bot.send_message(message.chat.id, "–ú–µ–Ω—é:", reply_markup=markup)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–æ–∫–∞—Ü–∏—è"
# @bot.message_handler(regexp="–õ–æ–∫–∞—Ü–∏—è")
# def show_location(message):
#     bot.send_message(message.chat.id, "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n–ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
# @bot.message_handler(regexp="–û –Ω–∞—Å")
# def about_us(message):
#     bot.send_message(message.chat.id, "–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —á—Ç–æ –µ—Å—Ç—å –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë.")

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
# @bot.callback_query_handler(func=lambda call: call.data == "back")
# def back_to_menu(call):
#     start(call.message)

# # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# bot.polling(none_stop=True)




# import telebot
# from telebot import types

# # –í–∞—à —Ç–æ–∫–µ–Ω
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'
# bot = telebot.TeleBot(TOKEN)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# @bot.message_handler(commands=['start'])
# def start(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     menu_button = types.KeyboardButton("–ú–µ–Ω—é")
#     location_button = types.KeyboardButton("–õ–æ–∫–∞—Ü–∏—è")
#     about_button = types.KeyboardButton("–û –Ω–∞—Å")
#     order_button = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å")
#     markup.add(menu_button, location_button, about_button, order_button)
#     bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FoodBot! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
# @bot.message_handler(regexp="–ú–µ–Ω—é")
# def show_menu(message):
#     menu_text = """
#     üìã –ú–µ–Ω—é:
    
#     1. –ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å
#     2. –®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π - 450—Å
#     3. –°–∞–º—Å–∞ - 65—Å
#     4. –ö—Ä—ã–ª—ã—à–∫–∏ (12 —à—Ç) - 500—Å
#     5. –®–∞—É—Ä–º–∞ - 270—Å
#     6. –ë—É—Ä–≥–µ—Ä - 300—Å
#     """
#     bot.send_message(message.chat.id, menu_text)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–æ–∫–∞—Ü–∏—è"
# @bot.message_handler(regexp="–õ–æ–∫–∞—Ü–∏—è")
# def show_location(message):
#     bot.send_location(message.chat.id, latitude=40.5235, longitude=72.8003)
#     bot.send_message(message.chat.id, "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n–ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
# @bot.message_handler(regexp="–û –Ω–∞—Å")
# def about_us(message):
#     about_text = """
#     üõí –û –Ω–∞—Å:
    
#     –ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.
#     """
#     bot.send_message(message.chat.id, about_text)

# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å"
# @bot.message_handler(regexp="–ó–∞–∫–∞–∑–∞—Ç—å")
# def order_food(message):
#     contact_markup = types.InlineKeyboardMarkup()
#     call_button = types.InlineKeyboardButton(text="–ü–æ–∑–≤–æ–Ω–∏—Ç—å", url="tel:+996708424268")
#     contact_markup.add(call_button)
#     bot.send_message(message.chat.id, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞:\n–ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑\nüìû 0708 424 268", reply_markup=contact_markup)

# # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# bot.polling(none_stop=True)











# from telegram import Update, ParseMode
# from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, InlineKeyboardButton, InlineKeyboardMarkup
# from telegram import InputLocationMessageContent

# # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'

# def start(update: Update, context: CallbackContext):
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# def button(update: Update, context: CallbackContext):
#     query = update.callback_query
#     data = query.data

#     if data == 'menu':
#         menu_keyboard = [
#             [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å", callback_data='plov')],
#             [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å", callback_data='shashlyk')],
#             [InlineKeyboardButton("–°–∞–º—Å–∞ - 65—Å/—à—Ç", callback_data='samsa')],
#             [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å/12—à—Ç", callback_data='krylyshki')],
#             [InlineKeyboardButton("–®–∞—É—Ä–º–∞ - 270—Å", callback_data='shaurma')],
#             [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä - 300—Å", callback_data='burger')],
#             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')]
#         ]
#         reply_markup = InlineKeyboardMarkup(menu_keyboard)
#         query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)

#     elif data == 'plov':
#         query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π\n–¶–µ–Ω–∞: 500—Å\n–§–æ—Ç–æ: [–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π](https://www.google.com/imgres?q=%D1%83%D0%B7%D0%B1%D0%B5%D0%BA%D1%81%D0%BA%D0%B8%D0%B9%20%D0%BF%D0%BB%D0%BE%D0%B2&imgurl=https%3A%2F%2Fimages.unian.net%2Fphotos%2F2022_10%2Fthumb_files%2F1200_0_1666194211-5378.jpg&imgrefurl=https%3A%2F%2Fwww.unian.net%2Frecipes%2Fsecond-courses%2Fside-dishes%2Fnastoyashchiy-uzbekskiy-nazvan-glavnyy-sekret-rassypchatogo-plova-12017058.html)")

#     # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ–Ω—é –∏ —Ñ—É–Ω–∫—Ü–∏–π

#     elif data == 'location':
#         query.edit_message_text(text="üìç –õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")
#         context.bot.send_location(chat_id=update.effective_chat.id, latitude=40.5157, longitude=72.0638)

#     elif data == 'about':
#         query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

#     elif data == 'order':
#         query.edit_message_text(text="üìû –ù–æ–º–µ—Ä: 0708424268\nüë§ –ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑")

#     elif data == 'delivery':
#         query.edit_message_text(text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—à –¥–æ—Å—Ç–∞–≤—â–∏–∫ –º–æ–≥ –≤–∞—Å –Ω–∞–π—Ç–∏.")

#     elif data == 'back':
#         start(update, context)

# def main():
#     updater = Updater(TOKEN, use_context=True)
#     dp = updater.dispatcher

#     dp.add_handler(CommandHandler("start", start))
#     dp.add_handler(CallbackQueryHandler(button))

#     updater.start_polling()
#     updater.idle()

# if name == 'main':
#     main()

# bot.polling(none_stop=True)






# from telegram import Update, ParseMode
# from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, InlineKeyboardButton, InlineKeyboardMarkup
# from telegram import InputLocationMessageContent

# # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'

# def start(update: Update, context: CallbackContext):
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# def button(update: Update, context: CallbackContext):
#     query = update.callback_query
#     data = query.data

#     if data == 'menu':
#         menu_keyboard = [
#             [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å", callback_data='plov')],
#             [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å", callback_data='shashlyk')],
#             [InlineKeyboardButton("–°–∞–º—Å–∞ - 65—Å/—à—Ç", callback_data='samsa')],
#             [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å/12—à—Ç", callback_data='krylyshki')],
#             [InlineKeyboardButton("–®–∞—É—Ä–º–∞ - 270—Å", callback_data='shaurma')],
#             [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä - 300—Å", callback_data='burger')],
#             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')]
#         ]
#         reply_markup = InlineKeyboardMarkup(menu_keyboard)
#         query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)

#     elif data == 'plov':
#         query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π\n–¶–µ–Ω–∞: 500—Å\n–§–æ—Ç–æ: [–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π](https://www.google.com/imgres?q=%D1%83%D0%B7%D0%B1%D0%B5%D0%BA%D1%81%D0%BA%D0%B8%D0%B9%20%D0%BF%D0%BB%D0%BE%D0%B2&imgurl=https%3A%2F%2Fimages.unian.net%2Fphotos%2F2022_10%2Fthumb_files%2F1200_0_1666194211-5378.jpg&imgrefurl=https%3A%2F%2Fwww.unian.net%2Frecipes%2Fsecond-courses%2Fside-dishes%2Fnastoyashchiy-uzbekskiy-nazvan-glavnyy-sekret-rassypchatogo-plova-12017058.html)")

#     # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ–Ω—é –∏ —Ñ—É–Ω–∫—Ü–∏–π

#     elif data == 'location':
#         query.edit_message_text(text="üìç –õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")
#         context.bot.send_location(chat_id=update.effective_chat.id, latitude=40.5157, longitude=72.0638)

#     elif data == 'about':
#         query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

#     elif data == 'order':
#         query.edit_message_text(text="üìû –ù–æ–º–µ—Ä: 0708424268\nüë§ –ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑")

#     elif data == 'delivery':
#         query.edit_message_text(text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—à –¥–æ—Å—Ç–∞–≤—â–∏–∫ –º–æ–≥ –≤–∞—Å –Ω–∞–π—Ç–∏.")

#     elif data == 'back':
#         start(update, context)

# def main():
#     updater = Updater(TOKEN, use_context=True)
#     dp = updater.dispatcher

#     dp.add_handler(CommandHandler("start", start))
#     dp.add_handler(CallbackQueryHandler(button))

#     updater.start_polling()
#     updater.idle()

# if  name == 'main':
#     main()

# import requests
# response = requests.get(f'https://api.telegram.org/bot{TOKEN}/getMe')
# print(response.json())
















# from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
# from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'

# def start(update: Update, context: CallbackContext):
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# def button(update: Update, context: CallbackContext):
#     query = update.callback_query
#     data = query.data

#     if data == 'menu':
#         menu_keyboard = [
#             [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å", callback_data='plov')],
#             [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å", callback_data='shashlyk')],
#             [InlineKeyboardButton("–°–∞–º—Å–∞ - 65—Å/—à—Ç", callback_data='samsa')],
#             [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å/12—à—Ç", callback_data='krylyshki')],
#             [InlineKeyboardButton("–®–∞—É—Ä–º–∞ - 270—Å", callback_data='shaurma')],
#             [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä - 300—Å", callback_data='burger')],
#             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')]
#         ]
#         reply_markup = InlineKeyboardMarkup(menu_keyboard)
#         query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)
    
#     elif data == 'plov':
#         query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π\n–¶–µ–Ω–∞: 500—Å")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://images.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg')
    
#     elif data == 'shashlyk':
#         query.edit_message_text(text="–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π\n–¶–µ–Ω–∞: 450—Å")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://www.m2-shop.ru/recipes/shashlickuriniebedra')
    
#     elif data == 'samsa':
#         query.edit_message_text(text="–°–∞–º—Å–∞\n–¶–µ–Ω–∞: 65—Å/—à—Ç")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile/')
    
#     elif data == 'krylyshki':
#         query.edit_message_text(text="–ö—Ä—ã–ª—ã—à–∫–∏\n–¶–µ–Ω–∞: 500—Å/12—à—Ç")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg')
    
#     elif data == 'shaurma':
#         query.edit_message_text(text="–®–∞—É—Ä–º–∞\n–¶–µ–Ω–∞: 270—Å")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848')
    
#     elif data == 'burger':
#         query.edit_message_text(text="–ë—É—Ä–≥–µ—Ä\n–¶–µ–Ω–∞: 300—Å")
#         context.bot.send_photo(chat_id=update.effective_chat.id, photo='https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg')

#     elif data == 'location':
#         query.edit_message_text(text="üìç –õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")
#         context.bot.send_location(chat_id=update.effective_chat.id, latitude=40.5157, longitude=72.0638)

#     elif data == 'about':
#         query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")
    
#     elif data == 'order':
#         query.edit_message_text(text="üìû –ù–æ–º–µ—Ä: 0708424268\nüë§ –ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑")
    
#     elif data == 'delivery':
#         query.edit_message_text(text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—à –¥–æ—Å—Ç–∞–≤—â–∏–∫ –º–æ–≥ –≤–∞—Å –Ω–∞–π—Ç–∏.")

#     elif data == 'back':
#         start(update, context)

# def main():
#     updater = Updater(TOKEN, use_context=True)
#     dp = updater.dispatcher
#     dp.add_handler(CommandHandler('start', start))
#     dp.add_handler(CallbackQueryHandler(button))

#     updater.start_polling()
#     updater.idle()

# if name == 'main':
#     main()



















# from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, LabeledPrice, ShippingOption
# from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext
# from telegram import ParseMode
# from telegram.error import TelegramError
# import logging

# # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑–¥–µ—Å—å
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'

# # –í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# def start(update: Update, context: CallbackContext) -> None:
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# def button(update: Update, context: CallbackContext) -> None:
#     query = update.callback_query
#     query.answer()

#     if query.data == 'menu':
#         menu_keyboard = [
#             [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π", callback_data='plov')],
#             [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π", callback_data='shashlik')],
#             [InlineKeyboardButton("–°–∞–º—Å–∞", callback_data='samsa')],
#             [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏", callback_data='wings')],
#             [InlineKeyboardButton("–®–∞—É—Ä–º–∞", callback_data='shawarma')],
#             [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä", callback_data='burger')],
#             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]
#         ]
#         reply_markup = InlineKeyboardMarkup(menu_keyboard)
#         query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)

#     elif query.data == 'location':
#         query.edit_message_text(text="üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω\n\n[–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ](https://maps.google.com/?q=–ú–∞—Å–∞–ª–∏–µ–≤–∞+100,+–û—à,+–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω)", parse_mode=ParseMode.MARKDOWN)

#     elif query.data == 'about':
#         query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

#     elif query.data == 'order':
#         query.edit_message_text(text="üìû –ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑\n\n–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É [–ø–æ–∑–≤–æ–Ω–∏—Ç—å](tel:+0708424268).")

#     elif query.data == 'delivery':
#         query.edit_message_text(text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—à –¥–æ—Å—Ç–∞–≤—â–∏–∫ –º–æ–≥ –ø—Ä–∏–≤–µ–∑—Ç–∏ –≤–∞—à –∑–∞–∫–∞–∑.")

#     elif query.data == 'plov':
#         query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å\n\n![–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π](https://www.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg)")

#     elif query.data == 'shashlik':
#         query.edit_message_text(text="–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π - 450—Å\n\n![–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π](https://www.m2-shop.ru/recipes/shashlickuriniebedra)")

#     elif query.data == 'samsa':
#         query.edit_message_text(text="–°–∞–º—Å–∞ - 65—Å –∑–∞ —à—Ç—É–∫—É\n\n![–°–∞–º—Å–∞](https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile/)")

#     elif query.data == 'wings':
#         query.edit_message_text(text="–ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å (12 —à—Ç)\n\n![–ö—Ä—ã–ª—ã—à–∫–∏](https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg)")

#     elif query.data == 'shawarma':
#         query.edit_message_text(text="–®–∞—É—Ä–º–∞ - 270—Å\n\n![–®–∞—É—Ä–º–∞](https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848)")

#     elif query.data == 'burger':
#         query.edit_message_text(text="–ë—É—Ä–≥–µ—Ä - 300—Å\n\n![–ë—É—Ä–≥–µ—Ä](https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg)")

#     elif query.data == 'start':
#         start(update, context)

# def main() -> None:
#     updater = Updater(TOKEN)

#     dispatcher = updater.dispatcher

#     dispatcher.add_handler(CommandHandler("start", start))
#     dispatcher.add_handler(CallbackQueryHandler(button))
#     updater.start_polling()
#     updater.idle()

# if  name == 'main':
#     main()
















# from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ParseMode
# from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext
# import logging

# # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑–¥–µ—Å—å
# TOKEN = '7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts'

# # –í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# def start(update: Update, context: CallbackContext) -> None:
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# def button(update: Update, context: CallbackContext) -> None:
#     query = update.callback_query
#     query.answer()

#     if query.data == 'menu':
#         menu_keyboard = [
#             [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π", callback_data='plov')],
#             [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π", callback_data='shashlik')],
#             [InlineKeyboardButton("–°–∞–º—Å–∞", callback_data='samsa')],
#             [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏", callback_data='wings')],
#             [InlineKeyboardButton("–®–∞—É—Ä–º–∞", callback_data='shawarma')],
#             [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä", callback_data='burger')],
#             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]
#         ]
#         reply_markup = InlineKeyboardMarkup(menu_keyboard)
#         query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)

#     elif query.data == 'location':
#         query.edit_message_text(text="üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω\n\n[–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ](https://maps.google.com/?q=–ú–∞—Å–∞–ª–∏–µ–≤–∞+100,+–û—à,+–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω)", parse_mode=ParseMode.MARKDOWN)

#     elif query.data == 'about':
#         query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

#     elif query.data == 'order':
#         query.edit_message_text(text="üìû –ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑\n\n–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É [–ø–æ–∑–≤–æ–Ω–∏—Ç—å](tel:+0708424268).")

#     elif query.data == 'delivery':
#         query.edit_message_text(text="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—à –¥–æ—Å—Ç–∞–≤—â–∏–∫ –º–æ–≥ –ø—Ä–∏–≤–µ–∑—Ç–∏ –≤–∞—à –∑–∞–∫–∞–∑.")

#     elif query.data == 'plov':
#         query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å\n\n![–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π](https://images.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg)")

#     elif query.data == 'shashlik':
#         query.edit_message_text(text="–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π - 450—Å\n\n![–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω–Ω—ã–π](https://www.m2-shop.ru/recipes/shashlickuriniebedra)")

#     elif query.data == 'samsa':
#         query.edit_message_text(text="–°–∞–º—Å–∞ - 65—Å –∑–∞ —à—Ç—É–∫—É\n\n![–°–∞–º—Å–∞](https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile/)")

#     elif query.data == 'wings':
#         query.edit_message_text(text="–ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å (12 —à—Ç)\n\n![–ö—Ä—ã–ª—ã—à–∫–∏](https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg)")

#     elif query.data == 'shawarma':
#         query.edit_message_text(text="–®–∞—É—Ä–º–∞ - 270—Å\n\n![–®–∞—É—Ä–º–∞](https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848)")

#     elif query.data == 'burger':
#         query.edit_message_text(text="–ë—É—Ä–≥–µ—Ä - 300—Å\n\n![–ë—É—Ä–≥–µ—Ä](https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg)")

#     elif query.data == 'start':
#         start(update, context)

# def main() -> None:
#     updater = Updater(TOKEN)

#     dispatcher = updater.dispatcher

#     dispatcher.add_handler(CommandHandler("start", start))
#     dispatcher.add_handler(CallbackQueryHandler(button))

#     updater.start_polling()
#     updater.idle()

# if __name__ == '__main__':
#     main()




















# from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
# from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     menu_keyboard = [
#         [KeyboardButton("–ú–µ–Ω—é"), KeyboardButton("–õ–æ–∫–∞—Ü–∏—è")],
#         [KeyboardButton("–û –Ω–∞—Å"), KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å")],
#         [KeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞"), KeyboardButton("–ù–∞–∑–∞–¥")]
#     ]
#     reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
#     await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# async def about_us(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     about_text = "üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É."
#     await update.message.reply_text(about_text)

# async def location(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     location_text = "üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω."
#     await update.message.reply_location(latitude=40.523245, longitude=72.805633)
#     await update.message.reply_text(location_text)

# async def order(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     order_text = "üìû –ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑"
#     await update.message.reply_text(order_text)

# async def delivery(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     delivery_text = "üõµ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.\n–í–∏–¥–µ–æ –∫—É—Ä—å–µ—Ä–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∑–¥–µ—Å—å."
#     await update.message.reply_text(delivery_text)

# async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     menu_keyboard = [
#         [KeyboardButton("1. –ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å"), KeyboardButton("2. –®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å")],
#         [KeyboardButton("3. –°–∞–º—Å–∞ - 65—Å"), KeyboardButton("4. –ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å")],
#         [KeyboardButton("5. –®–∞—É—Ä–º–∞ - 270—Å"), KeyboardButton("6. –ë—É—Ä–≥–µ—Ä - 300—Å")],
#         [KeyboardButton("–ù–∞–∑–∞–¥")]
#     ]
#     reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
#     await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:', reply_markup=reply_markup)

# def main():
#     application = ApplicationBuilder().token('7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts').build()

#     application.add_handler(CommandHandler("start", start))
#     application.add_handler(MessageHandler(filters.Text(["–û –Ω–∞—Å"]), about_us))
#     application.add_handler(MessageHandler(filters.Text(["–õ–æ–∫–∞—Ü–∏—è"]), location))
#     application.add_handler(MessageHandler(filters.Text(["–ó–∞–∫–∞–∑–∞—Ç—å"]), order))
#     application.add_handler(MessageHandler(filters.Text(["–î–æ—Å—Ç–∞–≤–∫–∞"]), delivery))
#     application.add_handler(MessageHandler(filters.Text(["–ú–µ–Ω—é"]), menu))

#     application.run_polling()

# if  name == 'main':
#     main()









# from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
# from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     menu_keyboard = [
#         [KeyboardButton("–ú–µ–Ω—é"), KeyboardButton("–õ–æ–∫–∞—Ü–∏—è")],
#         [KeyboardButton("–û –Ω–∞—Å"), KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å")],
#         [KeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞"), KeyboardButton("–ù–∞–∑–∞–¥")]
#     ]
#     reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
#     await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# async def about_us(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     about_text = "üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É."
#     await update.message.reply_text(about_text)

# async def location(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     location_text = "üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω."
#     await update.message.reply_location(latitude=40.523245, longitude=72.805633)
#     await update.message.reply_text(location_text)

# async def order(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     order_text = "üìû –ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑"
#     await update.message.reply_text(order_text)

# async def delivery(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     delivery_text = "üõµ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.\n–í–∏–¥–µ–æ –∫—É—Ä—å–µ—Ä–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –∑–¥–µ—Å—å."
#     await update.message.reply_text(delivery_text)

# async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     menu_keyboard = [
#         [KeyboardButton("1. –ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å"), KeyboardButton("2. –®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å")],
#         [KeyboardButton("3. –°–∞–º—Å–∞ - 65—Å"), KeyboardButton("4. –ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å")],
#         [KeyboardButton("5. –®–∞—É—Ä–º–∞ - 270—Å"), KeyboardButton("6. –ë—É—Ä–≥–µ—Ä - 300—Å")],
#         [KeyboardButton("–ù–∞–∑–∞–¥")]
#     ]
#     reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
#     await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:', reply_markup=reply_markup)

# def main():
#     application = ApplicationBuilder().token('7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts').build()

#     application.add_handler(CommandHandler("start", start))
#     application.add_handler(MessageHandler(filters.Text(["–û –Ω–∞—Å"]), about_us))
#     application.add_handler(MessageHandler(filters.Text(["–õ–æ–∫–∞—Ü–∏—è"]), location))
#     application.add_handler(MessageHandler(filters.Text(["–ó–∞–∫–∞–∑–∞—Ç—å"]), order))
#     application.add_handler(MessageHandler(filters.Text(["–î–æ—Å—Ç–∞–≤–∫–∞"]), delivery))
#     application.add_handler(MessageHandler(filters.Text(["–ú–µ–Ω—é"]), menu))

#     application.run_polling()

# if __name__== '__main__':
#     main()





# from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
# from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters

# async def start(update: Update, context):
#     keyboard = [
#         [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
#         [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
#         [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
#         [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
#         [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

# async def button(update: Update, context):
#     query = update.callback_query
#     await query.answer()

#     if query.data == 'menu':
#         await show_menu(query)
#     elif query.data == 'location':
#         await show_location(query)
#     elif query.data == 'about':
#         await show_about(query)
#     elif query.data == 'order':
#         await show_order(query)
#     elif query.data == 'delivery':
#         await show_delivery(query)
#     else:
#         await query.edit_message_text(text="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

# async def show_menu(query):
#     keyboard = [
#         [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π", callback_data='plov')],
#         [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π", callback_data='shashlik')],
#         [InlineKeyboardButton("–°–∞–º—Å–∞", callback_data='samsa')],
#         [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏", callback_data='wings')],
#         [InlineKeyboardButton("–®–∞—É—Ä–º–∞", callback_data='shawarma')],
#         [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä", callback_data='burger')],
#         [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')]
#     ]
#     reply_markup = InlineKeyboardMarkup(keyboard)
#     await query.edit_message_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:", reply_markup=reply_markup)

# async def show_location(query):
#     await query.edit_message_text(text="üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω")

# async def show_about(query):
#     await query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

# async def show_order(query):
#     await query.edit_message_text(text="–ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑")

# async def show_delivery(query):
#     keyboard = [[KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)]]
#     reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True)
#     await query.edit_message_text(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.", reply_markup=reply_markup)

# async def item_description(update: Update, context):
#     query = update.callback_query
#     await query.answer()
#     if query.data == 'plov':
#         await query.edit_message_text(text="–£–∑–±–µ–∫—Å–∫–∏–π –ü–ª–æ–≤\n–¶–µ–Ω–∞: 500—Å\n[–§–æ—Ç–æ](https://images.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg)")
#     elif query.data == 'shashlik':
#         await query.edit_message_text(text="–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π\n–¶–µ–Ω–∞: 450—Å\n[–§–æ—Ç–æ](https://www.m2-shop.ru/recipes/shashlickuriniebedra)")
#     elif query.data == 'samsa':
#         await query.edit_message_text(text="–°–∞–º—Å–∞\n–¶–µ–Ω–∞: 65—Å –∑–∞ —à—Ç—É–∫—É\n[–§–æ—Ç–æ](https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile/)")
#     elif query.data == 'wings':
#         await query.edit_message_text(text="–ö—Ä—ã–ª—ã—à–∫–∏\n–¶–µ–Ω–∞: 500—Å –∑–∞ 12—à—Ç\n[–§–æ—Ç–æ](https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg)")
#     elif query.data == 'shawarma':
#         await query.edit_message_text(text="–®–∞—É—Ä–º–∞\n–¶–µ–Ω–∞: 270—Å\n[–§–æ—Ç–æ](https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848)")
#     elif query.data == 'burger':
#         await query.edit_message_text(text="–ë—É—Ä–≥–µ—Ä\n–¶–µ–Ω–∞: 300—Å\n[–§–æ—Ç–æ](https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg)")

# if __name__ == '__main__':
#     application = ApplicationBuilder().token('7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts').build()
#     application.add_handler(CommandHandler('start', start))
#     application.add_handler(CallbackQueryHandler(button))
#     application.add_handler(CallbackQueryHandler(item_description))

#     application.run_polling()










from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton("–ú–µ–Ω—é", callback_data='menu')],
        [InlineKeyboardButton("–õ–æ–∫–∞—Ü–∏—è", callback_data='location')],
        [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
        [InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å", callback_data='order')],
        [InlineKeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞", callback_data='delivery')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=reply_markup)

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == 'menu':
        # –ü–æ–¥–º–µ–Ω—é –ú–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π", callback_data='plov')],
            [InlineKeyboardButton("–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π", callback_data='shashlyk')],
            [InlineKeyboardButton("–°–∞–º—Å–∞", callback_data='samsa')],
            [InlineKeyboardButton("–ö—Ä—ã–ª—ã—à–∫–∏", callback_data='krylyshki')],
            [InlineKeyboardButton("–®–∞—É—Ä–º–∞", callback_data='shaurma')],
            [InlineKeyboardButton("–ë—É—Ä–≥–µ—Ä", callback_data='burger')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='start')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text="–ú–µ–Ω—é:", reply_markup=reply_markup)

    elif query.data == 'location':
        # –õ–æ–∫–∞—Ü–∏—è
        await query.edit_message_text(
            text="üìç–õ–æ–∫–∞—Ü–∏—è: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 100, –û—à, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ](https://www.google.com/maps?q=40.5135,72.8168)", parse_mode='Markdown'
        )
        
    elif query.data == 'about':
        # –û –Ω–∞—Å
        await query.edit_message_text(text="üõí –û –Ω–∞—Å:\n\n–ú—ã –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω –µ–¥—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω—é. –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤–∞—à—É –µ–¥—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ—ë –ø–æ –Ω–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É.")

    elif query.data == 'order':
        # –ó–∞–∫–∞–∑–∞—Ç—å
        keyboard = [[InlineKeyboardButton("–ü–æ–∑–≤–æ–Ω–∏—Ç—å", url="tel:+996708424268")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n–ù–æ–º–µ—Ä: 0708424268\n–ò–º—è: –ú–∞–º–∞—Ç–∏—Å–∞ –∫—ã–∑—ã –ê–π–Ω–∞–∑", reply_markup=reply_markup)
          
    elif query.data == 'delivery':
        # –î–æ—Å—Ç–∞–≤–∫–∞
        button = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ', request_location=True)
        reply_markup = ReplyKeyboardMarkup([[button]], resize_keyboard=True, one_time_keyboard=True)
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=reply_markup)

    elif query.data == 'plov':
        # –ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π
        await query.edit_message_text(text="–ü–ª–æ–≤ –£–∑–±–µ–∫—Å–∫–∏–π - 500—Å\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://images.unian.net/photos/2022_10/thumb_files/1200_0_1666194211-5378.jpg)")

    elif query.data == 'shashlyk':
        # –®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π
        await query.edit_message_text(text="–®–∞—à–ª—ã–∫ –∫—É—Ä–∏–Ω—ã–π - 450—Å\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://www.m2-shop.ru/recipes/shashlickuriniebedra)")

    elif query.data == 'samsa':
        # –°–∞–º—Å–∞
        await query.edit_message_text(text="–°–∞–º—Å–∞ - 65—Å –∑–∞ —à—Ç—É–∫\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://grillweb.uz/reczepty/piczcza-i-pirogi/uzbekskaya-samsa-na-grile)")

    elif query.data == 'krylyshki':
        # –ö—Ä—ã–ª—ã—à–∫–∏
        await query.edit_message_text(text="12—à—Ç –ö—Ä—ã–ª—ã—à–∫–∏ - 500—Å\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://halal-spb.ru/sites/default/files/styles/large/public/krylyshki-kak-v-kfs-recept.jpg)")

    elif query.data == 'shaurma':
        # –®–∞—É—Ä–º–∞
        await query.edit_message_text(text="–®–∞—É—Ä–º–∞ - 270—Å\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://lookaside.fbsbx.com/lookaside/crawler/media/?media_id=100067684224848)")
        
    elif query.data == 'burger':
        # –ë—É—Ä–≥–µ—Ä
        await query.edit_message_text(text="–ë—É—Ä–≥–µ—Ä - 300—Å\n\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ](https://sxodim.com/uploads/images/2022/11/11/optimized/beff18152003115708dc2a06510b2f73_800xauto-q-85.jpg)")

    elif query.data == 'start':
        await start(update, context)

async def location_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_location = update.message.location
    await update.message.reply_text(f"–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {user_location.latitude}, {user_location.longitude}\n\n–í–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω.")



def main():
    application = ApplicationBuilder().token("7545140888:AAEItO0WOZaX4BKBaLOPuf2O1QaoRvvaWts").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_click))
    application.add_handler(MessageHandler(filters.LOCATION, location_handler))

    application.run_polling()

if __name__ == '__main__':
    main()

